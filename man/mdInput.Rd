% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinymarkdown.R
\name{mdInput}
\alias{mdInput}
\title{Create a Markdown Editor}
\usage{
mdInput(
  inputId,
  refresh_rate = 1000,
  min_height = "300px",
  height = "500px",
  preview_style = "tab",
  preview_highlight = FALSE,
  initial_edit_type = "markdown",
  hide_mode_switch = TRUE,
  language = "en-us",
  initial_value = NULL
)
}
\arguments{
\item{inputId}{The \code{input} prefix used to access the value.}

\item{refresh_rate}{The rate (ms) to send the editor's contents to Shiny.
Default is 1000ms. If \code{refresh = "manual"}, the editor will have a
button to manually send the editor's contents to Shiny.}

\item{min_height}{The editor's miniminum height value (pixels). Default =
'300px'. Overwritten by the height parameter.}

\item{height}{The editor's height value, applied as a border-box. Example
values include "300px", "100\%", and "auto". Defaults to "500px".}

\item{preview_style}{The Markdown editor's preview style. Either "tab" or
"vertical". Default is "tab".}

\item{preview_highlight}{Should the Markdown Editor's HTML preview have a
highlighted element corresponding to the cursor position in the Markdown
editor. Default is FALSE.}

\item{initial_edit_type}{Initial editor type: "markdown" or "wysiwyg".
Default is "markdown".}

\item{hide_mode_switch}{Should the user be able to switch the editor mode
from "wysiwyg" to "markdown" or vice versa? Default is TRUE.}

\item{language}{Editor language ISO code. Defaults to "en-us".}

\item{initial_value}{Should the editor have text already present? If so,
supply a character string. Default is NULL.}
}
\value{
An instance of the markdown editor for use within a Shiny App.
}
\description{
Create an instance of a Markdown editor for text that may require formatting.
}
\section{Server value}{


A character string of the text input in two formats:
\itemize{
\item Markdown, which may be accessed using the inputId with "_markdown" as a suffix.
\item HTML, which may be accessed using the inputId with "_html" as a suffix.
}

See the examples section for more an example.
}

\examples{

if(interactive()) {

library(shiny)
library(shinymarkdown)
ui <- fluidPage(
mdInput(inputId = "myEditor", height = "500px", hide_mode_switch = F)
)

server <- function(input, output, session) {

# Print the markdown version of what is typed
observe({print(input$myEditor_markdown)})

# Print the HTML version of what is typed
observe({print(input$myEditor_html)})

}

shinyApp(ui, server)

}

}
